.TH "srcs/ddos/get_flood.c" 3 "Thu Apr 15 2021" "Version v1.0" "ddos_util" \" -*- nroff -*-
.ad l
.nh
.SH NAME
srcs/ddos/get_flood.c
.SH SYNOPSIS
.br
.PP
\fC#include 'header\&.h'\fP
.br
\fC#include 'base/make_ipv4\&.h'\fP
.br
\fC#include 'base/make_tcp\&.h'\fP
.br
\fC#include 'base/subnet_mask\&.h'\fP
.br
\fC#include 'base/time_check\&.h'\fP
.br
\fC#include 'ddos/get_flood\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGET_METHOD\fP   'GET / HTTP/1\&.1\\r\\nHost: localhost\\r\\n\\r\\n'"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBget_flood_print_usage\fP (void)"
.br
.RI "print get flooding usage "
.ti -1c
.RI "void * \fBgenerate_get_flood\fP (void *data)"
.br
.RI "get flooding generate thread "
.ti -1c
.RI "void * \fBget_flood_time_check\fP (void *data)"
.br
.RI "get flooding time check thread "
.ti -1c
.RI "void \fBget_flood_main\fP (char *argv[])"
.br
.RI "get flooding main function "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBg_num_threads\fP"
.br
.ti -1c
.RI "__u64 \fBg_get_num_total\fP"
.br
.ti -1c
.RI "__u64 \fBg_get_num_generated_in_sec\fP"
.br
.ti -1c
.RI "\fBInputArguments\fP \fBg_get_input\fP"
.br
.ti -1c
.RI "\fB__u32\fP \fBg_get_request_per_sec\fP"
.br
.ti -1c
.RI "\fBMaskingArguments\fP \fBg_get_now\fP"
.br
.ti -1c
.RI "pthread_mutex_t \fBg_get_mutex\fP = PTHREAD_MUTEX_INITIALIZER"
.br
.ti -1c
.RI "pthread_cond_t \fBg_get_cond\fP = PTHREAD_COND_INITIALIZER"
.br
.ti -1c
.RI "struct timespec \fBg_get_before_time\fP"
.br
.ti -1c
.RI "struct timespec \fBg_get_now_time\fP"
.br
.ti -1c
.RI "char \fBg_get_request_msg\fP [\fB__GET_REQUEST_MSG_SIZE__\fP]"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define GET_METHOD   'GET / HTTP/1\&.1\\r\\nHost: localhost\\r\\n\\r\\n'"

.PP
Definition at line 8 of file get_flood\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void* generate_get_flood (void * data)"

.PP
get flooding generate thread 
.PP
\fBDate:\fP
.RS 4
2021/02/20 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP thread input, default: NULL 
.RE
.PP
\fBReturns:\fP
.RS 4
void * 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINULL\fP always 
.RE
.PP

.PP
Definition at line 38 of file get_flood\&.c\&.
.SS "void get_flood_main (char * argv[])"

.PP
get flooding main function 
.PP
\fBDate:\fP
.RS 4
2021/02/20 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIargv\fP arguments 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 105 of file get_flood\&.c\&.
.SS "void get_flood_print_usage (void)"

.PP
print get flooding usage 
.PP
\fBDate:\fP
.RS 4
2021/02/20 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 30 of file get_flood\&.c\&.
.SS "void* get_flood_time_check (void * data)"

.PP
get flooding time check thread 
.PP
\fBDate:\fP
.RS 4
2021/02/20 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP thread input, default: NULL 
.RE
.PP
\fBReturns:\fP
.RS 4
void * 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINULL\fP always 
.RE
.PP

.PP
Definition at line 91 of file get_flood\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "struct timespec g_get_before_time"

.PP
Definition at line 25 of file get_flood\&.c\&.
.SS "pthread_cond_t g_get_cond = PTHREAD_COND_INITIALIZER"

.PP
Definition at line 22 of file get_flood\&.c\&.
.SS "\fBInputArguments\fP g_get_input"

.PP
Definition at line 16 of file get_flood\&.c\&.
.SS "pthread_mutex_t g_get_mutex = PTHREAD_MUTEX_INITIALIZER"

.PP
Definition at line 21 of file get_flood\&.c\&.
.SS "\fBMaskingArguments\fP g_get_now"

.PP
Definition at line 19 of file get_flood\&.c\&.
.SS "struct timespec g_get_now_time"

.PP
Definition at line 26 of file get_flood\&.c\&.
.SS "__u64 g_get_num_generated_in_sec"

.PP
Definition at line 14 of file get_flood\&.c\&.
.SS "__u64 g_get_num_total"

.PP
Definition at line 13 of file get_flood\&.c\&.
.SS "char g_get_request_msg[\fB__GET_REQUEST_MSG_SIZE__\fP]"

.PP
Definition at line 28 of file get_flood\&.c\&.
.SS "\fB__u32\fP g_get_request_per_sec"

.PP
Definition at line 17 of file get_flood\&.c\&.
.SS "int g_num_threads"

.PP
Definition at line 20 of file main\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ddos_util from the source code\&.
